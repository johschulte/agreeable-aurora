---
// Rezeptübersichtsseite - Für die Anzeige aller Rezepte mit Such- und Filterfunktionen
import RecipeLayout from "../../layouts/RecipeLayout.astro";
import RecipeCard from "../../components/recipes/RecipeCard.astro";
import RecipeSearchBar from "../../components/recipes/RecipeSearchBar.astro";
import { getUserRecipes, getUserTags } from "../../utils/db-recipe.js";

// Diese Seite wird nicht vorgerendert, sondern für jede Anfrage serverseitig gerendert,
// damit wir Zugriff auf die URL-Parameter haben
export const prerender = false;

// Benutzer-ID für den in der Datenbank vorhandenen Benutzer
const userId = "ccce9083-2af5-49cf-90e4-f6e4d6e3fb98"; // test@example.com

// Debug: Vollständige URL und Suchparameter anzeigen
console.log("================================");
console.log("DEBUG - Request started");
console.log("DEBUG - Full request URL (toString):", Astro.url.toString());
console.log("DEBUG - Request URL object:", Astro.request.url);
console.log("DEBUG - URL object:", Object.getOwnPropertyNames(Astro.url));
console.log("DEBUG - Raw search params (url.search):", Astro.url.search);
console.log("DEBUG - Request headers:", Object.fromEntries(Astro.request.headers.entries()));
console.log("================================");

// Parameter aus URL oder Standard
const searchParams = Astro.url.searchParams;
console.log("DEBUG - searchParams:", searchParams);
console.log("DEBUG - searchParams entries:", [...searchParams.entries()]);

const searchTerm = searchParams.get("searchTerm") || "";
const timeFilter = searchParams.get("timeFilter") || "all";

// Hole alle Tags aus der URL - versuche verschiedene Parameter
const tagParam = searchParams.get("tag");
console.log("DEBUG - tagParam:", tagParam);

const tagsParams = searchParams.getAll("tag");
console.log("DEBUG - tagsParams:", tagsParams);

// Setze selectedTags basierend auf URL-Parametern
let selectedTags = tagsParams;
if (selectedTags.length === 0 && tagParam) {
  selectedTags = [tagParam];
}

// Debug-Logging für URL-Parameter
console.log("URL Parameter - searchTerm:", searchTerm);
console.log("URL Parameter - timeFilter:", timeFilter);
console.log("URL Parameter - selectedTags:", selectedTags);

// Daten laden
let recipes = [];
let allTags = [];
let errorMessage = null;

try {
  // Lade alle Tags für die Filterkomponente
  allTags = await getUserTags(userId);
  console.log("Available tags:", allTags.map(t => ({ id: t.id, name: t.name })));

  // Optionen für die Rezeptabfrage
  const options = {
    sortBy: "created_at",
    sortOrder: "desc",
  };

  // Wenn Tags ausgewählt sind, füge sie zur Abfrage hinzu
  if (selectedTags && selectedTags.length > 0) {
    // Filtere leere Tag-Werte heraus
    const validTags = selectedTags.filter(tag => tag && tag !== "");
    if (validTags.length > 0) {
      console.log("Filtering by tags:", validTags);
      options.tags = validTags;
    } else {
      console.log("No valid tags selected for filtering");
      selectedTags = []; // Setze auf leeres Array, wenn keine gültigen Tags
    }
  } else {
    console.log("No tags selected for filtering");
    selectedTags = []; // Setze auf leeres Array, wenn keine Tags
  }

  // Lade Rezepte, eventuell mit Tag-Filtern
  recipes = await getUserRecipes(userId, options);
  console.log(`Loaded ${recipes.length} recipes from database`);

  // Clientseitig filtern nach Suchbegriff
  if (searchTerm) {
    console.log(`Filtering by search term: "${searchTerm}"`);
    const searchLower = searchTerm.toLowerCase();
    const filteredRecipes = recipes.filter(
      (recipe) =>
        recipe.title.toLowerCase().includes(searchLower) ||
        (recipe.description &&
          recipe.description.toLowerCase().includes(searchLower)) ||
        recipe.ingredients.some((i) =>
          i.name.toLowerCase().includes(searchLower)
        )
    );
    console.log(`After search filter: ${filteredRecipes.length} recipes`);
    recipes = filteredRecipes;
  }

  // Zeit-Filter anwenden
  if (timeFilter && timeFilter !== "all") {
    console.log(`Filtering by time: ${timeFilter} minutes`);
    const maxTime = parseInt(timeFilter, 10);
    const filteredRecipes = recipes.filter((recipe) => {
      const totalTime =
        (recipe.prep_time_minutes || 0) + (recipe.cook_time_minutes || 0);
      return totalTime <= maxTime;
    });
    console.log(`After time filter: ${filteredRecipes.length} recipes`);
    recipes = filteredRecipes;
  }
} catch (error) {
  console.error("Fehler beim Laden der Rezeptdaten:", error);
  errorMessage =
    "Es gab ein Problem beim Laden der Daten. Bitte versuche es später erneut.";
}

// Prüfe, ob Filter aktiv sind
const hasActiveFilters =
  searchTerm || (timeFilter && timeFilter !== "all") || selectedTags.length > 0;
---

<RecipeLayout title="Meine Rezepte">
  <div class="mb-6 flex justify-between items-center">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-gray-100">
      Meine Rezepte
    </h1>
    <div class="flex space-x-3">
      <a
        href="/recipes/import-url"
        class="px-4 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors flex items-center"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="w-5 h-5 mr-2 text-emerald-600 dark:text-emerald-500"
        >
          <path
            fill-rule="evenodd"
            d="M19.902 4.098a3.75 3.75 0 00-5.304 0l-4.5 4.5a3.75 3.75 0 001.035 6.037.75.75 0 01-.646 1.353 5.25 5.25 0 01-1.449-8.45l4.5-4.5a5.25 5.25 0 117.424 7.424l-1.757 1.757a.75.75 0 11-1.06-1.06l1.757-1.757a3.75 3.75 0 000-5.304zm-7.389 4.267a.75.75 0 011-.353 5.25 5.25 0 011.449 8.45l-4.5 4.5a5.25 5.25 0 11-7.424-7.424l1.757-1.757a.75.75 0 111.06 1.06l-1.757 1.757a3.75 3.75 0 105.304 5.304l4.5-4.5a3.75 3.75 0 00-1.035-6.037.75.75 0 01-.354-1z"
            clip-rule="evenodd"></path>
        </svg>
        Importieren
      </a>
      <a
        href="/recipes/new"
        class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="w-5 h-5 mr-2"
        >
          <path
            fill-rule="evenodd"
            d="M12 3.75a.75.75 0 01.75.75v6.75h6.75a.75.75 0 010 1.5h-6.75v6.75a.75.75 0 01-1.5 0v-6.75H4.5a.75.75 0 010-1.5h6.75V4.5a.75.75 0 01.75-.75z"
            clip-rule="evenodd"></path>
        </svg>
        Neu
      </a>
    </div>
  </div>

  <!-- Suchleiste und Filter -->
  <RecipeSearchBar
    allTags={allTags}
    selectedTags={selectedTags}
    searchTerm={searchTerm}
    showAdvanced={hasActiveFilters}
  />

  {
    errorMessage ? (
      <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-400 px-4 py-3 rounded-md">
        {errorMessage}
      </div>
    ) : recipes.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {recipes.map((recipe) => (
          <RecipeCard recipe={recipe} />
        ))}
      </div>
    ) : hasActiveFilters ? (
      <div class="bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center">
        <p class="text-gray-600 dark:text-gray-300 mb-4">
          Keine Rezepte gefunden, die deinen Filterkriterien entsprechen.
        </p>
        <a
          href="/recipes"
          class="inline-block px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
        >
          Filter zurücksetzen
        </a>
      </div>
    ) : (
      <div class="bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center">
        <p class="text-gray-600 dark:text-gray-300 mb-4">
          Du hast noch keine Rezepte in deiner Sammlung.
        </p>
        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <a
            href="/recipes/import-url"
            class="px-4 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors flex items-center justify-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
              class="w-5 h-5 mr-2 text-emerald-600 dark:text-emerald-500"
            >
              <path
                fill-rule="evenodd"
                d="M19.902 4.098a3.75 3.75 0 00-5.304 0l-4.5 4.5a3.75 3.75 0 001.035 6.037.75.75 0 01-.646 1.353 5.25 5.25 0 01-1.449-8.45l4.5-4.5a5.25 5.25 0 117.424 7.424l-1.757 1.757a.75.75 0 11-1.06-1.06l1.757-1.757a3.75 3.75 0 000-5.304zm-7.389 4.267a.75.75 0 011-.353 5.25 5.25 0 011.449 8.45l-4.5 4.5a5.25 5.25 0 11-7.424-7.424l1.757-1.757a.75.75 0 111.06 1.06l-1.757 1.757a3.75 3.75 0 105.304 5.304l4.5-4.5a3.75 3.75 0 00-1.035-6.037.75.75 0 01-.354-1z"
                clip-rule="evenodd"
              />
            </svg>
            URL importieren
          </a>
          <a
            href="/recipes/new"
            class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
              class="w-5 h-5 mr-2"
            >
              <path
                fill-rule="evenodd"
                d="M12 3.75a.75.75 0 01.75.75v6.75h6.75a.75.75 0 010 1.5h-6.75v6.75a.75.75 0 01-1.5 0v-6.75H4.5a.75.75 0 010-1.5h6.75V4.5a.75.75 0 01.75-.75z"
                clip-rule="evenodd"
              />
            </svg>
            Rezept erstellen
          </a>
        </div>
      </div>
    )
  }
</RecipeLayout>
